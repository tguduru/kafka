/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.tguduru.avro.schema;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Product extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Product\",\"namespace\":\"org.tguduru.avro.schema\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"description\",\"type\":\"string\"},{\"name\":\"price\",\"type\":\"double\"},{\"name\":\"productType\",\"type\":{\"type\":\"enum\",\"name\":\"ProductType\",\"symbols\":[\"Electronics\",\"Books\",\"Home\",\"Tools\",\"Sports\",\"Music\",\"Auto\",\"Grocery\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence description;
  @Deprecated public double price;
  @Deprecated public org.tguduru.avro.schema.ProductType productType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Product() {}

  /**
   * All-args constructor.
   */
  public Product(java.lang.CharSequence name, java.lang.CharSequence description, java.lang.Double price, org.tguduru.avro.schema.ProductType productType) {
    this.name = name;
    this.description = description;
    this.price = price;
    this.productType = productType;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return description;
    case 2: return price;
    case 3: return productType;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: description = (java.lang.CharSequence)value$; break;
    case 2: price = (java.lang.Double)value$; break;
    case 3: productType = (org.tguduru.avro.schema.ProductType)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'price' field.
   */
  public java.lang.Double getPrice() {
    return price;
  }

  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(java.lang.Double value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'productType' field.
   */
  public org.tguduru.avro.schema.ProductType getProductType() {
    return productType;
  }

  /**
   * Sets the value of the 'productType' field.
   * @param value the value to set.
   */
  public void setProductType(org.tguduru.avro.schema.ProductType value) {
    this.productType = value;
  }

  /** Creates a new Product RecordBuilder */
  public static org.tguduru.avro.schema.Product.Builder newBuilder() {
    return new org.tguduru.avro.schema.Product.Builder();
  }
  
  /** Creates a new Product RecordBuilder by copying an existing Builder */
  public static org.tguduru.avro.schema.Product.Builder newBuilder(org.tguduru.avro.schema.Product.Builder other) {
    return new org.tguduru.avro.schema.Product.Builder(other);
  }
  
  /** Creates a new Product RecordBuilder by copying an existing Product instance */
  public static org.tguduru.avro.schema.Product.Builder newBuilder(org.tguduru.avro.schema.Product other) {
    return new org.tguduru.avro.schema.Product.Builder(other);
  }
  
  /**
   * RecordBuilder for Product instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Product>
    implements org.apache.avro.data.RecordBuilder<Product> {

    private java.lang.CharSequence name;
    private java.lang.CharSequence description;
    private double price;
    private org.tguduru.avro.schema.ProductType productType;

    /** Creates a new Builder */
    private Builder() {
      super(org.tguduru.avro.schema.Product.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.tguduru.avro.schema.Product.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.price)) {
        this.price = data().deepCopy(fields()[2].schema(), other.price);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.productType)) {
        this.productType = data().deepCopy(fields()[3].schema(), other.productType);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Product instance */
    private Builder(org.tguduru.avro.schema.Product other) {
            super(org.tguduru.avro.schema.Product.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.description)) {
        this.description = data().deepCopy(fields()[1].schema(), other.description);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.price)) {
        this.price = data().deepCopy(fields()[2].schema(), other.price);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.productType)) {
        this.productType = data().deepCopy(fields()[3].schema(), other.productType);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public org.tguduru.avro.schema.Product.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'name' field */
    public org.tguduru.avro.schema.Product.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'description' field */
    public java.lang.CharSequence getDescription() {
      return description;
    }
    
    /** Sets the value of the 'description' field */
    public org.tguduru.avro.schema.Product.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.description = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'description' field has been set */
    public boolean hasDescription() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'description' field */
    public org.tguduru.avro.schema.Product.Builder clearDescription() {
      description = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'price' field */
    public java.lang.Double getPrice() {
      return price;
    }
    
    /** Sets the value of the 'price' field */
    public org.tguduru.avro.schema.Product.Builder setPrice(double value) {
      validate(fields()[2], value);
      this.price = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'price' field has been set */
    public boolean hasPrice() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'price' field */
    public org.tguduru.avro.schema.Product.Builder clearPrice() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'productType' field */
    public org.tguduru.avro.schema.ProductType getProductType() {
      return productType;
    }
    
    /** Sets the value of the 'productType' field */
    public org.tguduru.avro.schema.Product.Builder setProductType(org.tguduru.avro.schema.ProductType value) {
      validate(fields()[3], value);
      this.productType = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'productType' field has been set */
    public boolean hasProductType() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'productType' field */
    public org.tguduru.avro.schema.Product.Builder clearProductType() {
      productType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public Product build() {
      try {
        Product record = new Product();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.description = fieldSetFlags()[1] ? this.description : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.price = fieldSetFlags()[2] ? this.price : (java.lang.Double) defaultValue(fields()[2]);
        record.productType = fieldSetFlags()[3] ? this.productType : (org.tguduru.avro.schema.ProductType) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
